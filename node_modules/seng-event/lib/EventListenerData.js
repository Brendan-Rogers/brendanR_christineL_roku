"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _sengDisposable2 = _interopRequireDefault(require("seng-disposable"));

/**
 * Data object that is created on every call to [[EventDispatcher.addEventListener]]. The object is
 * saved on the [[EventDispatcher.listeners]] object for internal use but is also returned by the
 * _addEventListener_ method as a way to remove the listener.
 */
var EventListenerData =
/*#__PURE__*/
function (_sengDisposable) {
  (0, _inheritsLoose2.default)(EventListenerData, _sengDisposable);

  /**
   * This property will be set to _true_ by the [[EventDispatcher]] this listener is bound to when
   * the listener is removed. This is to make sure the handler is not called, even if the listener
   * is removed while dispatching the event.
   */

  /**
   * @param dispatcher The EventDispatcher on which this listener listens for events
   * @param type The type of event this listener responds to
   * @param handler The handler function that will be called when a matching event is dispatched
   * @param useCapture Set to the _useCapture_ argument passed to [[EventDispatcher.addEventListener|addEventListener]]
   * @param priority Set to the _priority_ argument passed to [[EventDispatcher.addEventListener|addEventListener]].
   * Used to sort the listener within the [[EventDispatcher._listeners|_listeners]] object of the EventDispatcher
   */
  function EventListenerData(dispatcher, type, handler, useCapture, priority) {
    var _this;

    _this = _sengDisposable.call(this) || this;
    Object.defineProperty((0, _assertThisInitialized2.default)(_this), "dispatcher", {
      configurable: true,
      enumerable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty((0, _assertThisInitialized2.default)(_this), "type", {
      configurable: true,
      enumerable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty((0, _assertThisInitialized2.default)(_this), "handler", {
      configurable: true,
      enumerable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty((0, _assertThisInitialized2.default)(_this), "useCapture", {
      configurable: true,
      enumerable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty((0, _assertThisInitialized2.default)(_this), "priority", {
      configurable: true,
      enumerable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty((0, _assertThisInitialized2.default)(_this), "isRemoved", {
      configurable: true,
      enumerable: true,
      writable: true,
      value: false
    });
    _this.dispatcher = dispatcher;
    _this.type = type;
    _this.handler = handler;
    _this.useCapture = useCapture;
    _this.priority = priority;
    return _this;
  }
  /**
   * Detaches this event listener from its EventDispatcher. The handler function on this listener will
   * no longer be called in response to dispatched events.
   */


  var _proto = EventListenerData.prototype;

  _proto.dispose = function dispose() {
    if (this.dispatcher) {
      this.dispatcher.removeEventListener(this.type, this.handler, this.useCapture);
      this.dispatcher = null;
    }

    _sengDisposable.prototype.dispose.call(this);
  };

  return EventListenerData;
}(_sengDisposable2.default);

exports.default = EventListenerData;