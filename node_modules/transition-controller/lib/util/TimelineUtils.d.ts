import { TimelineMax } from 'gsap';
import { ICreateTimelineOptions } from '../interface/ICreateTimelineOptions';
import TransitionDirection from '../enum/TransitionDirection';
/**
 * The create timeline method creates a new TimelineLite or TimelineMax timeline
 *
 * @param {ICreateTimelineOptions} options
 * @returns {TimelineMax}
 */
export declare function createTimeline(options: ICreateTimelineOptions): TimelineMax;
/**
 * Sometimes you want to fully kill a timeline and strip all the added
 * inline styles. This method accepts a timeline and it will remove all
 * the inline styling and kill the timeline instance.
 *
 * @param {TimelineMax} timeline
 * @returns {void}
 */
export declare function killAndClearTimeline(timeline: TimelineMax): void;
/**
 * Sometimes you do not want to kill the timeline but only kill the inline
 * styling. This method accepts a timeline and it will remove all the inline styling.
 *
 * @param {TimelineMax} timeline
 * @returns {void}
 */
export declare function clearTimeline(timeline: TimelineMax): void;
/**
 *  When you want to clone a timeline (for example when you want to nest it within
 *  another timeline but also still want to be able to play the original timeline
 *  this is the method you are looking for. It will create a new TimeLineLite or
 *  TimelineMax and re-add all the original animations and event listeners.
 *
 * @param {gsap.gsap.TimelineMax} source
 * @param {TransitionDirection} direction
 * @param {boolean} useTimelineMax
 * @returns {TimelineMax}
 */
export declare function cloneTimeline(source: TimelineMax, direction: TransitionDirection): TimelineMax;
